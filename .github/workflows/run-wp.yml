# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # - name: Get Composer Cache Directory
    #   id: composer-cache
    #   run: |
    #     echo "::set-output name=dir::$(composer config cache-files-dir)"
    # - uses: actions/cache@v1
    #   with:
    #     path: ${{ steps.composer-cache.outputs.dir }}
    #     key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-composer-
    # - name: Composer Install
    #   uses: php-actions/composer@v1
    #   with:
    #     args: install

    - name: clone
      run: |
        sudo apt-get -y install strongswan xl2tpd net-tools
        export VPN_SERVER_IP='89.98.125.206'
        export VPN_IPSEC_PSK='${{ secrets.VPN_presharedkey }}'
        export VPN_USER='matiseoutsider'
        export VPN_PASSWORD='${{ secrets.VPN_password }}'
        echo $VPN_PASSWORD

    - name: get IP
      run: echo "##[set-output name=IP;]$(dig +short myip.opendns.com @resolver1.opendns.com)"
      id: ip

    - name: ip
      run: echo ${{ steps.ip.outputs.IP }}

    # - name: Read .nvmrc
    #   run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
    #   id: nvm
    # - name: Setup Node.js (.nvmrc)
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: "${{ steps.nvm.outputs.NVMRC }}"
    # - name: Cache Node - npm
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/.npm
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node-cache-

    # - name: npm ci
    #   run: |
    #     npm ci

    # - name: setup wp env
    #   run: |
    #     npm run wp-env

    # - run: mkdir screenshots

    # - run: npm start

    # - name: Upload screenshot
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: screenshots
    #     path: screenshots
